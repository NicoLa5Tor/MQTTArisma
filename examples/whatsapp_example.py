#!/usr/bin/env python3
"""
Ejemplo de uso del servicio WhatsApp
"""
import sys
import os
import asyncio

# Agregar el directorio padre al path
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from config import AppConfig
from services.whatsapp_service import WhatsAppService


async def main():
    """Ejemplo de uso del servicio WhatsApp"""
    print("üöÄ Iniciando ejemplo de WhatsApp Service...")
    
    # Crear configuraci√≥n
    config = AppConfig()
    
    # Crear servicio WhatsApp
    whatsapp_service = WhatsAppService(config.whatsapp)
    
    # Verificar estado del servicio
    print(f"\nüìä Estado del servicio:")
    status = whatsapp_service.get_status()
    print(f"   - Habilitado: {status['service']['enabled']}")
    print(f"   - API disponible: {status['client']['healthy']}")
    print(f"   - URL: {status['client']['api_url']}")
    
    if not status['client']['healthy']:
        print("‚ùå API de WhatsApp no disponible. Verifique que est√© corriendo en el puerto 5050.")
        return
    
    # Ejemplo 1: Enviar mensaje individual
    print(f"\nüì± Ejemplo 1: Mensaje individual")
    phone = "573001234567"  # N√∫mero de ejemplo
    message = "¬°Hola! Este es un mensaje de prueba desde el servicio MQTT."
    
    success = whatsapp_service.send_individual_message(phone, message)
    print(f"   - Resultado: {'‚úÖ √âxito' if success else '‚ùå Error'}")
    
    # Ejemplo 2: Enviar broadcast interactivo
    print(f"\nüì± Ejemplo 2: Broadcast interactivo")
    phones = ["573001234567", "573007654321"]  # N√∫meros de ejemplo
    
    success = whatsapp_service.send_broadcast_message(
        phones=phones,
        header_type="text",
        header_content="üö® ALERTA DE SEGURIDAD",
        body_text="Se ha detectado una emergencia en su zona. Mant√©ngase seguro y siga las indicaciones.",
        button_text="Ver M√°s Info",
        button_url="https://ejemplo.com/emergencia",
        footer_text="Sistema de Alertas ECOES"
    )
    print(f"   - Resultado: {'‚úÖ √âxito' if success else '‚ùå Error'}")
    
    # Ejemplo 3: Procesar notificaci√≥n desde backend
    print(f"\nüì± Ejemplo 3: Procesar notificaci√≥n")
    
    # Notificaci√≥n individual
    notification_individual = {
        "type": "individual",
        "phone": "573001234567",
        "message": "Mensaje procesado desde notificaci√≥n del backend",
        "use_queue": False
    }
    
    success = whatsapp_service.process_whatsapp_notification(notification_individual)
    print(f"   - Notificaci√≥n individual: {'‚úÖ √âxito' if success else '‚ùå Error'}")
    
    # Notificaci√≥n broadcast
    notification_broadcast = {
        "type": "broadcast",
        "phones": ["573001234567"],
        "header_type": "text",
        "header_content": "Notificaci√≥n Autom√°tica",
        "body_text": "Este mensaje fue enviado autom√°ticamente desde el backend.",
        "button_text": "Confirmar",
        "button_url": "https://ejemplo.com/confirmar",
        "footer_text": "Sistema Autom√°tico"
    }
    
    success = whatsapp_service.process_whatsapp_notification(notification_broadcast)
    print(f"   - Notificaci√≥n broadcast: {'‚úÖ √âxito' if success else '‚ùå Error'}")
    
    # Mostrar estad√≠sticas finales
    print(f"\nüìä Estad√≠sticas finales:")
    final_status = whatsapp_service.get_simple_status()
    print(f"   - Mensajes enviados: {final_status['messages_sent']}")
    print(f"   - Tasa de √©xito: {final_status['success_rate']}%")
    print(f"   - Servicio saludable: {final_status['healthy']}")
    
    print(f"\n‚úÖ Ejemplo completado")


if __name__ == "__main__":
    asyncio.run(main())
